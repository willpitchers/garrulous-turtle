#!/bin/bash -login
#PBS -l nodes=1:ppn=2,walltime=04:00:00,mem=128gb
#PBS -o /mnt/research/efish/2015_genomic_data/scripts
#PBS -N BAM_check
#PBS -j oe
#PBS -M pitchers@msu.edu
#PBS -m abe
#PBS -r n
#PBS -t 1-100

#### 06_bam_file_check.qsub
#  - this script can be called like this, e.g. `qsub -v genome=bionano 07_bam_file_check.qsub`
#  – this script globs in files that look like `XXX_NNNN_all_libraries.bam` and does a validation check

## Set up some variables -- where do the files live
topdir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline8
cd ${topdir}

if [ ${genome} == "bionano" ]
  then
    dir=${topdir}/bionano
    mkdir -p ${dir}
    ref=/mnt/ls15/scratch/groups/efish/P_kings_SuperScafGenome/Para_king_2015_013_20_40_15_90_3_superscaffold.fasta
  else
    dir=${topdir}/illumina
    mkdir -p ${dir}
    ref=/mnt/ls15/scratch/groups/efish/P_kings_genome/supercontigs.fasta
fi

# Current job number
n=${PBS_ARRAYID}

# load modules
cd ${dir}
module load SAMTools/1.3.1
module load picardTools/1.89

# make sure that the samples.list file is available
if [ ! -f samples.list ]
  then cp /mnt/research/efish/2015_genomic_data/samples.list ./
fi

# Set maximum number of jobs for this run – this will be the same as the number of fish listed in `samples.list`
MAXJOBID=`wc -l samples.list | cut -d' ' -f 1`

individual=`head -${n} samples.list | tail -1 `

# write the individual ID clearly to the stdout report
echo ${individual}

# view the bam header, and grep out anything that looks like a sample ID
samtools view -H ${individual}*_all_libraries.bam | grep --color="never" -Eo "SM:[0-9A-Z_]{3,9}" | uniq > ${individual}.samples

# count rows – if 1 sample is present there ought to be 1 row
count=`wc -l ${individual}.samples | cut -d' ' -f1`

if [ $count -gt 1 ]
    then echo "ERROR IN ${individual}*_all_libraries.bam"
else
    rm ${individual}.samples
fi

# secondarily, auto-check the bam files are 'valid'
java -jar ${PICARD}/ValidateSamFile.jar  I=${individual}*_all_libraries.bam  MODE=SUMMARY


#Check to see if this is the last job and email user
if [ ${n} -eq ${MAXJOBID} ]
then
    echo "." | mail -s "The BAM individual merging array is finishing" ${USER}@msu.edu
    cd $PBS_O_WORKDIR
    grep -i "error" BAM_check* > bam_errors
    if [ `wc -l bam_errors | cut -d' ' -f1` -gt 0 ]
    then
        echo "." | mail -s "BAM errors require your attention" ${USER}@msu.edu
    else
        qsub -v genome=${genome} 08a_vcf_disco_scaf_8_array.qsub
        qsub -v genome=${genome} 08b_gvcf_disco_scaf_8_array.qsub
    fi
fi

#Print out the statistics for this job
qstat -f ${PBS_JOBID}
