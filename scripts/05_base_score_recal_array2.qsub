#!/bin/bash -login
#PBS -l nodes=1:ppn=8,walltime=04:00:00,mem=128gb
#PBS -l file=20gb,feature='intel16'
#PBS -N BSQR_pt2
#PBS -j oe
#PBS -M pitchers@msu.edu
#PBS -m abe
#PBS -r n
#PBS -t 000-100

#### 05_base_score_recal_array2.qsub
#  - this script can be called like this, e.g. `qsub -v genome=bionano 04_base_score_recal_array2.qsub`
#  – this script globs in files that look like `XXX_NNNN_library_Lane_RX_Ye.aligned.dedup.bam`
#  - this script writes out files that look like `XXX_NNNN_library_Lane_RX_Ye.aligned.dedup.recalibrated.bam`

## Set up some variables -- where do the files live
topdir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline8
cd ${topdir}

if [ ${genome} == "bionano" ]
  then
    dir=${topdir}/bionano
    ref=/mnt/ls15/scratch/groups/efish/P_kings_SuperScafGenome/Para_king_2015_013_20_40_15_90_3_superscaffold.fasta
  else
    dir=${topdir}/illumina
    ref=/mnt/ls15/scratch/groups/efish/P_kings_genome/supercontigs.fasta
fi

# Current job number
n=${PBS_ARRAYID}

# build a list of file names
cd ${dir}
filelist=(*e.aligned.dedup.bam)
thisfile=${filelist[${n}]}

# Set maximum number of jobs for this run – this will be the same as the number of bam files to process
MAXJOBID=$( expr `echo ${#filelist[@]}` - 1 )

# load needed modules
module load GATK/3.7.0
module load picardTools/1.89

## SPECIAL SAUCE - make temp scratch space to which to write outputs
OUTDIR=${TMPDIR}/BaseR
mkdir -p ${OUTDIR}
mkdir -p ${dir}/tempbams

cd ${OUTDIR}
df -h ${OUTDIR}

if [ ! -f tempbams/`basename ${thisfile} .bam`.recal_plots.pdf ]
    then
    ## Generate before-after plots (~5 mins)
    java -Xmx120g -cp $GATK -jar $GATK/GenomeAnalysisTK.jar -T AnalyzeCovariates \
            -R ${ref}  -before ${dir}/tempbams/`basename ${thisfile} .bam`.recal_data.table \
            -after ${dir}/tempbams/`basename ${thisfile} .bam`.post_recal_data.table \
            -plots ${dir}/tempbams/`basename ${thisfile} .bam`.recal_plots.pdf -rf BadCigar
fi

# copy output back to scratch
cp `basename ${thisfile} .bam`.recal_plots.pdf ${dir}/tempbams/

if [ ! -f tempbams/`basename ${thisfile} .bam`.recalibrated.bam ]
    then
    ## Apply the recalibration to the sequence data (~5 mins)
    java -Xmx120g -cp $GATK -jar $GATK/GenomeAnalysisTK.jar -T PrintReads -R ${ref} \
            -I ${dir}/${thisfile}  -BQSR ${dir}/tempbams/`basename ${thisfile} .bam`.recal_data.table \
            -o ${dir}/`basename ${thisfile} .bam`.recalibrated.bam  -nct 28 -rf BadCigar
fi

# copy output back to scratch
cp  `basename ${thisfile} .bam`.recalibrated.bam  ${dir}/tempbams/

cd ${dir}

# paranoid check for a well-formed bam-file
java -XX:ParallelGCThreads=28 -jar ${PICARD}/ValidateSamFile.jar  I=tempbams/`basename ${thisfile} .bam`.recalibrated.bam \
             MODE=SUMMARY IGNORE=INVALID_VERSION_NUMBER


# Calculate next job to run
NEXT=$(( ${n} + 200 ))

#Check to see if next job is past the maximum job id
if [ ${NEXT} -le ${MAXJOBID} ]
then
  cd ${PBS_O_WORKDIR}
  NEXTJOB=`qsub -t ${NEXT} -v genome=${genome} ${JOBSCRIPT}`
  echo this is job ${PBS_JOBID} ${n} submitting ${NEXT} ${NEXTJOB}
  echo `date`
fi

#Check to see if this is the last job and email user
if [ ${n} -eq ${MAXJOBID} ]
then
    cd tempbams  &&  zip base_recal_plots.zip  *recal_plots.pdf
    echo "." | mail -s "The base_score_recalibration JOB ARRAY is finishing" ${USER}@msu.edu
    cd ${PBS_O_WORKDIR}
    qsub -v genome=${genome} 06_bam_merge_samples_array.qsub
fi

#Print out the statistics for this job
qstat -f ${PBS_JOBID}
