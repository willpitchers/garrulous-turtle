#!/bin/bash -login
#PBS -l nodes=1:ppn=4,walltime=04:00:00,mem=128gb
#PBS -l feature='intel16'
#PBS -N Dedup_${PBS_ARRAYID}
#PBS -j oe
#PBS -M pitchers@msu.edu
#PBS -m abe
#PBS -r n
#PBS -t 0-199

#### 03_deduplication_array.qsub
#  – this script globs in files that look like `XXX_NNNN_library_Lane_RX_Ye.aligned.sam`
#  - this script writes out files that look like `XXX_NNNN_library_Lane_RX_Ye.aligned.sorted.sam` & `XXX_NNNN_library_Lane_RX_Ye.aligned.dedup.bam`

#The JOBSCRIPT variable should be the name of this script
JOBSCRIPT=03_deduplication_array.qsub

## Set up some variables -- where do the files live
topdir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline8

if [ ${genome} == "bionano" ]
  then
    dir=${topdir}/bionano
    mkdir -p ${dir}
    ref=/mnt/ls15/scratch/groups/efish/P_kings_SuperScafGenome/Para_king_2015_013_20_40_15_90_3_superscaffold.fasta
  else
    dir=${topdir}/illumina
    mkdir -p ${dir}
    ref=/mnt/ls15/scratch/groups/efish/P_kings_genome/supercontigs.fasta
fi

# Current job number
n=${PBS_ARRAYID}

# build a list of file names
cd ${dir}
filelist=(*.aligned.sam)
thisfile=${filelist[${n}]}

#Set manximum number of jobs for this run
MAXJOBID=$( expr `echo ${#filelist[@]}` - 1 )

# Load PICARDtools
module load picardTools/1.89


# the PICARD commands – I could probably pipe then together, but this way less is lost if we crash
if [ ! -f `basename ${thisfile} .sam`.dedup.bam ]
  then java -XX:ParallelGCThreads=4 -jar ${PICARD}/SortSam.jar INPUT=${thisfile} OUTPUT=`basename ${thisfile} .sam`.sorted.sam \
      SORT_ORDER=coordinate
  java -XX:ParallelGCThreads=4 -jar ${PICARD}/MarkDuplicates.jar INPUT=`basename ${thisfile} .sam`.sorted.sam \
      OUTPUT=`basename ${thisfile} .sam`.dedup.bam M=`basename ${thisfile} .sam`.metrics.txt
  java -XX:ParallelGCThreads=4 -jar ${PICARD}/BuildBamIndex.jar INPUT=`basename ${thisfile} .sam`.dedup.bam
fi


# and now an extra check that the bam files are well-formed
java -XX:ParallelGCThreads=4 -jar ${PICARD}/ValidateSamFile.jar  I=`basename ${thisfile} .sam`.dedup.bam  MODE=SUMMARY


# Calculate next job to run
NEXT=$(( ${n} + 200 ))

#Check to see if next job is past the maximum job id
if [ ${NEXT} -le ${MAXJOBID} ]
then
    cd ${PBS_O_WORKDIR}
    qsub -t ${NEXT} -v genome=${genome} ${JOBSCRIPT}
fi

#Check to see if this is the last job and email user
if [ ${n} -eq ${MAXJOBID} ]
then
    echo "." | mail -s "The DEDUP. ARRAY is finishing" ${USER}@msu.edu
    cd ${PBS_O_WORKDIR}
    qsub -v genome=${genome} 04_base_score_recal_array1.qsub
fi

#Print out the statistics for this job
qstat -f ${PBS_JOBID}
