#!/bin/bash -login
#PBS -l nodes=1:ppn=4,walltime=04:00:00,mem=128gb
#PBS -l feature='intel16'
#PBS -N Align_${PBS_ARRAYID}
#PBS -j oe
#PBS -M pitchers@msu.edu
#PBS -m abe
#PBS -r n
#PBS -t 000-199

#### 02_alignment_array.qsub
#  â€“ this script globs in files that look like `XXX_NNNN_library_Lane_RX_Ye.trimmed.fq`
#  - this script writes out files that look like `XXX_NNNN_library_Lane_RX_Ye.aligned.sam`

#The JOBSCRIPT variable should be the name of this script
JOBSCRIPT=02_alignment_array.qsub

## Set up some variables -- where do the files live
topdir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline8
cd ${topdir}

if [ ${genome} == "bionano" ]
  then
    dir=${topdir}/bionano
    mkdir -p ${dir}
    ref=/mnt/ls15/scratch/groups/efish/P_kings_SuperScafGenome/Para_king_2015_013_20_40_15_90_3_superscaffold.fasta
  else
    dir=${topdir}/illumina
    mkdir -p ${dir}
    ref=/mnt/ls15/scratch/groups/efish/P_kings_genome/supercontigs.fasta
fi

# Current job number
n=${PBS_ARRAYID}

# build a list of file names
paired=(*R1_pe.trimmed.fq)
unpaired=(*_se.trimmed.fq)
filelist=(`for file in ${paired[@]} ${unpaired[@]}; do echo ${file} ; done`)
thisfile=${filelist[${n}]}

# Set maximum number of jobs for this run
MAXJOBID=$( expr `echo ${#filelist[@]}` - 1 )

# pull out info to build new readgroup labels
thisfastq=`basename ${thisfile}`
flowcell=$( head -1 ${thisfastq} | cut -d' ' -f 1 | cut -d':' -f 3 )           # which flowcell
lane=$( head -1 ${thisfastq} | cut -d' ' -f 1 | cut -d':' -f 4 )               # which lane
barcode=$( head -1 ${thisfastq} | cut -d' ' -f 2 | cut -d':' -f 4 )            # which barcode
sample=$( echo ${thisfile} | grep --color='never' -Eo "^[A-Z]{3,4}_[0-9]{4}" ) # which fish

# this generates the read tag label appropriate fro the reads from this file
thisTAG=@RG\\tID:${flowcell}.${lane}\\tSM:${sample}\\tPL:illumina\\tLB:${flowcell}\\tPU:${flowcell}.${lane}.${barcode}

# load required modules
# module load bwa/0.7.12.r1044      # problems were had with the module version of BWA
BWA=/mnt/home/pitchers/bwa          # my home dir has newest BWA version...
module load picardTools/1.89

if [ ! -f ${dir}/`basename ${thisfile} .trimmed.fq`.aligned.sam ]
then
# the BWA command -- the 'if' statement decides whether the alignment should be single or paired-end
if [  `grep -Eo 'pe' <<< $(echo ${thisfile})` ]
  then
    ${BWA}/bwa mem -v 3 -t 4 -M -T 40 -R ${thisTAG} ${ref} ${thisfile} \
`basename ${thisfile} R1_pe.trimmed.fq`R2_pe.trimmed.fq > ${dir}/`basename ${thisfile} .trimmed.fq`.aligned.sam
  else
    ${BWA}/bwa mem -v 3 -t 4 -M -T 40 -R ${thisTAG} ${ref} ${thisfile} > ${dir}/`basename ${thisfile} .trimmed.fq`.aligned.sam
fi
fi

# check that the output sam files are well-formed
java -XX:ParallelGCThreads=4 -jar ${PICARD}/ValidateSamFile.jar  I=${dir}/`basename ${thisfile} .trimmed.fq`.aligned.sam  MODE=SUMMARY


NEXT=$(( ${n} + 200 ))

#Check to see if next job is past the maximum job id
if [ ${NEXT} -le ${MAXJOBID} ]
then
    cd ${PBS_O_WORKDIR}
    qsub -v genome=${genome} -t ${NEXT} ${JOBSCRIPT}
fi

#Check to see if this is the last job and email user
if [ ${n} -eq ${MAXJOBID} ]
then
    echo "." | mail -s "The alignment array is finishing" ${USER}@msu.edu
    cd ${PBS_O_WORKDIR}
    qsub -v genome=${genome} 03_deduplication_array.qsub
fi

#Print out sfastq=`basename ${thisfile}`the statistics for this job
qstat -f ${PBS_JOBID}
