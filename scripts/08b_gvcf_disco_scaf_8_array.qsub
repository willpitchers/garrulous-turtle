#!/bin/bash -login
#PBS -l nodes=1:ppn=14,walltime=04:00:00,mem=120gb
#PBS -l feature='intel16'
#PBS -N VCFdisc_V8
#PBS -j oe
#PBS -M pitchers@msu.edu
#PBS -m abe
#PBS -r n
#PBS -t 0-63

#### 08_gvcf_disco_chunk_7_array.qsub
#  - this script can be called like this, e.g. `qsub -v genome=illumina 08b_gvcf_disco_scaf_8_array.qsub`
#  â€“ this script globs in files that look like `XXX_NNNN_all_libraries.bam`
#  - this script writes out *lots* of files that look like `all_fish_slice_N.g.vcf`

# Current job number
n=${PBS_ARRAYID}

#The JOBSCRIPT variable should be the name of this script
JOBSCRIPT=08b_gvcf_disco_chunk_8_array.qsub

## Set up some variables -- where do the files live
topdir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline8
cd ${topdir}

if [ ${genome} == "bionano" ]
  then
    dir=${topdir}/bionano
    mkdir -p ${dir}
    ref=/mnt/ls15/scratch/groups/efish/P_kings_SuperScafGenome/Para_king_2015_013_20_40_15_90_3_superscaffold.fasta
    indices=superscaf.indices
  else
    dir=${topdir}/illumina
    mkdir -p ${dir}
    ref=/mnt/ls15/scratch/groups/efish/P_kings_genome/supercontigs.fasta
    indices=scaf.indices
fi

cd ${dir}

# we need the indices file...
if [ ! -f ${indices} ]
   then cp /mnt/research/efish/2015_genomic_data/scripts/${indices} ./
fi

#Set manximum number of jobs for this run
MAXJOBID=`wc -l ${indices} | cut -d' ' -f 1`

module load Java/jdk1.8.0_31
module load GATK/3.7.0

# select a chunk
thisindex=`head -${n} ${indices} | tail -1`

# build a list of file names
bamfiles=(*all_libraries.bam)
thisfile=${bamfiles[${n}]}
mkdir -p GVCF_called


if [ ! -f GVCF_called/`basename ${thisfile} .bam`.g.vcf ]
  then
  # # the call to the GATK HaplotypeCaller
  java -Xmx120g -cp $GATK -jar $GATK/GenomeAnalysisTK.jar -T HaplotypeCaller \
        -R ${ref}  ${samples} \
        --genotyping_mode DISCOVERY \
        -stand_call_conf 30  -mbq 20 \
        --output_mode EMIT_ALL_CONFIDENT_SITES \
        --num_threads 1 --num_cpu_threads_per_data_thread 28 \
        -o GVCF_called/`basename ${thisfile} .bam`.g.vcf
fi


# Calculate next job to run
NEXT=$(( ${n} + 200 ))

# Check to see if next job is past the maximum job id
if [ ${NEXT} -le ${MAXJOBID} ]
then
    cd ${PBS_O_WORKDIR}
    qsub -t ${NEXT} ${JOBSCRIPT}
fi

# Check to see if this is the last job and email user
# the last job is NOT always the last one to *finish* -- I ought to make this more reliable....
if [ ${n} -eq ${MAXJOBID} ]
then
    echo "." | mail -s "The vcf_discovery 7 ARRAY is finishing" ${USER}@msu.edu
    cd ${PBS_O_WORKDIR}
#    qsub 08_merge_all_vcfs.qsub
fi

#Print out the statistics for this job
qstat -f ${PBS_JOBID}
