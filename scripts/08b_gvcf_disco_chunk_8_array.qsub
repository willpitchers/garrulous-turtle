#!/bin/bash -login
#PBS -l nodes=1:ppn=14,walltime=04:00:00,mem=60gb
#PBS -l feature='intel16'
#PBS -N VCFdisc_V8
#PBS -j oe
#PBS -M pitchers@msu.edu
#PBS -m abe
#PBS -r n
#PBS -t 0-63

#### 08_gvcf_disco_chunk_7_array.qsub
#  -
#  â€“ this script globs in files that look like `XXX_NNNN_all_libraries.bam`
#  - this script writes out *lots* of files that look like `all_fish_slice_N.g.vcf`


# Current job number
n=${PBS_ARRAYID}

#The JOBSCRIPT variable should be the name of this script
JOBSCRIPT=08_gvcf_disco_chunk_8_array.qsub

# where do the files live
#dir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline8
dir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline8/old_fish/bionano
#ref=/mnt/ls15/scratch/groups/efish/P_kings_genome/supercontigs.fasta
ref=/mnt/ls15/scratch/groups/efish/P_kings_SuperScafGenome/Para_king_2015_013_20_40_15_90_3_superscaffold.fasta

cd ${dir}
#mkdir -p gvcf_chunks

# we need the `indices.list` file...
#if [ ! -f indices.list ]
#    then cp /mnt/research/efish/2015_genomic_data/scripts/indices.list ./
#fi

#Set manximum number of jobs for this run
MAXJOBID=`wc -l superscaf.indices | cut -d' ' -f 1`

module load Java/jdk1.8.0_31
module load GATK/3.7.0

# select a chunk
#thisindex=`head -${n} indices.list | tail -1`
thisindex=`head -${n} superscaf.list | tail -1`

# build a list of file names
bamfiles=(*all_libraries.bam)
thisfile=${bamfiles[${n}]}

outputfilename=`basename ${thisfile} .bam`.g.vcf


if [ ! -f `basename ${thisfile} .bam`.g.vcf ]
    then
    # # the call to the GATK HaplotypeCaller
    java -Xmx60g -cp $GATK -jar $GATK/GenomeAnalysisTK.jar -T HaplotypeCaller \
                  -R ${ref} -I ${thisfile}  \
                  --genotyping_mode DISCOVERY \
                  -stand_call_conf 30  -mbq 20 \
                  -o `basename ${thisfile} .bam`.g.vcf \
                  --output_mode EMIT_ALL_CONFIDENT_SITES \
                  --emitRefConfidence GVCF \
                  --num_threads 1 --num_cpu_threads_per_data_thread 28
fi


# Calculate next job to run
NEXT=$(( ${n} + 200 ))

# Check to see if next job is past the maximum job id
if [ ${NEXT} -le ${MAXJOBID} ]
then
    cd ${PBS_O_WORKDIR}
    qsub -t ${NEXT} ${JOBSCRIPT}
fi

# Check to see if this is the last job and email user
# the last job is NOT always the last one to *finish* -- I ought to make this more reliable....
if [ ${n} -eq ${MAXJOBID} ]
then
    echo "." | mail -s "The vcf_discovery 7 ARRAY is finishing" ${USER}@msu.edu
    cd ${PBS_O_WORKDIR}
#    qsub 08_merge_all_vcfs.qsub
fi

#Print out the statistics for this job
qstat -f ${PBS_JOBID}
